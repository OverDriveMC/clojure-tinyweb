cmdhistory=["{\:name \\"Mike\\" \:sex \:male}" "(def test-map {\:name \\"Mike\\"})" "(test-map \:name)" "(test-map \:orange)" "(test-map \:\\"name\\")" "(def test-map {\:name \\"Mike\\"})" "(\:name test-map)" "(\:orange test-map)" "(Integer/parseInt \\"42\\")" ".. \\"Mike\\" toUpperCase (substring 0 1)" "(.. \\"mike\\" toUpperCase (substring 0 1))" "(def test-http-request {\:body \\"Mike\\" \:path \\"/say-hello\\" \:headers{}})" "(test-controller test-http-request)" "(defn test-controller [http-request]\\r\\n  {\:name (http-request \:body)})" " (def test-http-request {\:body \\"Mike\\" \:path \\"/say-hello\\" \:headers{}})" "(test-controller test-http-request)" ";\u91C7\u7528<h1>\u6807\u8BB0\u6765\u5BF9\u540D\u5B57\u4FE1\u606F\u8FDB\u884C\u4E86\u5305\u88C5\\r\\n(defn test-view [model]\\r\\n  (str \\"<h1>Hello, \\" (model \:name) \\"</h1>\\"))\\r\\n;\u6D4B\u8BD5\u6A21\u578B\\r\\n(def test-model {\:name \\"Mike\\"})\\r\\n(test-view test-model)" "(ns mbfpp.oo.tinyweb.core\\r\\n   (\:require [clojure.string \:as str])\\r\\n   (\:import (com.mblinn.oo.tinyweb RenderingException ControllerException)))\\r\\n\\r\\n(defn- render [view model]\\r\\n  try(\\r\\n     (view model)\\r\\n     (catch Exception e (throw (RenderingException. e )))))\\r\\n\\r\\n(defn test-controller [http-request]\\r\\n  {\:name (http-request \:body)})\\r\\n\\r\\n(defn test-view [model]\\r\\n  (str \\"<h1>Hello,\\" (model \:name) \\"</h1>\\")\\r\\n  )\\r\\n\\r\\n(def test-request-handler {\:controller test-controller\\r\\n                           \:view test-view})\\r\\n\\r\\n(def test-http-request {\:body \\"Mike\\" \\r\\n                        \:path \\"/say-hello\\"\\r\\n                        \:headers{}})" "(defn- execute-request[http-request handler]\\r\\n  (let [controller (handler \: controller)  \\r\\n        view (handler \:view)]\\r\\n    (try\\r\\n      {\:status-code 200\\r\\n       \:body \\r\\n       (render\\r\\n         view\\r\\n         (controller http-request))}\\r\\n      (catch ControllerException e {\:status-code (.getStatusCode e) \:body \\"\\"})\\r\\n      (catch RenderingException e {\:status-code 500\\r\\n                                   \:body \\"Exception while rendering\\"})\\r\\n      (catch Exception e (.printStackTrace e){\:status-code 500 \:body \\"\\"}))))" "(defproject clojure-tinyweb \\"0.0.1-SNAPSHOT\\"\\r\\n  \:java-source-paths [\\"src/java\\" \\"test/java\\"])" "(defproject my-project \\"0.0.1-SNAPSHOT\\"\\r\\n  [...]\\r\\n  \:java-source-paths [\\"src/java\\" \\"test/java\\"])" "(defproject clojure-tinyweb \\"0.0.1-SNAPSHOT\\"\\r\\n  [...]\\r\\n  \:java-source [\\"src/java\\" \\"test/java\\"])" "(ns mbfpp.oo.tinyweb.core\\r\\n   (\:require [clojure.string \:as str])\\r\\n   (\:import (com.mblinn.oo.tinyweb RenderingException ControllerException)))" "(defn- render [view model]\\r\\n  try(\\r\\n     (view model)\\r\\n     (catch Exception e (throw (RenderingException. e )))))\\r\\n\\r\\n(defn test-controller [http-request]\\r\\n  {\:name (http-request \:body)})\\r\\n\\r\\n(defn test-view [model]\\r\\n  (str \\"<h1>Hello,\\" (model \:name) \\"</h1>\\")\\r\\n  )\\r\\n\\r\\n(def test-request-handler {\:controller test-controller\\r\\n                           \:view test-view})\\r\\n\\r\\n(def test-http-request {\:body \\"Mike\\" \\r\\n                        \:path \\"/say-hello\\"\\r\\n                        \:headers{}})\\r\\n\\r\\n(defn- execute-request[http-request handler]\\r\\n  (let [controller (handler \: controller)  \\r\\n        view (handler \:view)]\\r\\n    (try\\r\\n      {\:status-code 200\\r\\n       \:body \\r\\n       (render\\r\\n         view\\r\\n         (controller http-request))}\\r\\n      (catch ControllerException e {\:status-code (.getStatusCode e) \:body \\"\\"})\\r\\n      (catch RenderingException e {\:status-code 500\\r\\n                                   \:body \\"Exception while rendering\\"})\\r\\n      (catch Exception e (.printStackTrace e){\:status-code 500 \:body \\"\\"}))))\\r\\n\\r\\n(execute-request test-http-request test-request-handler)" "(count [1 2 3 4])" "lein run -m com.mblinn.oo.tinyweb.RenderingException" "(ns mbfpp.oo.tinyweb.core\\r\\n   (\:require [clojure.string \:as str])\\r\\n   (\:import (com.mblinn.oo.tinyweb RenderingException ControllerException)))\\r\\n\\r\\n(defn- render [view model]\\r\\n  (try\\r\\n     (view model)\\r\\n     (catch Exception e (throw (RenderingException. e )))))\\r\\n\\r\\n(defn test-controller [http-request]\\r\\n  {\:name (http-request \:body)})\\r\\n\\r\\n(defn test-view [model]\\r\\n  (str \\"<h1>Hello,\\" (model \:name) \\"</h1>\\")\\r\\n  )\\r\\n\\r\\n(def test-request-handler {\:controller test-controller\\r\\n                           \:view test-view})\\r\\n\\r\\n(def test-http-request {\:body \\"Mike\\" \\r\\n                        \:path \\"/say-hello\\"\\r\\n                        \:headers{}})\\r\\n\\r\\n(defn- execute-request[http-request handler]\\r\\n  (let [controller (handler \:controller)  \\r\\n        view (handler \:view)]\\r\\n    (try\\r\\n      {\:status-code 200\\r\\n       \:body \\r\\n       (render\\r\\n         view\\r\\n         (controller http-request))}\\r\\n      (catch ControllerException e {\:status-code (.getStatusCode e) \:body \\"\\"})\\r\\n      (catch RenderingException e {\:status-code 500\\r\\n                                   \:body \\"Exception while rendering\\"})\\r\\n      (catch Exception e (.printStackTrace e){\:status-code 500 \:body \\"\\"}))))\\r\\n\\r\\n(execute-request test-http-request test-request-handler)" "(let [name \\"Mike\\"\\r\\n      greeting \\"Hello\\"]\\r\\n  (str greeting \\", \\" name))" "(render test-view (test-controller test-http-request))" "(try\\r\\n  \\"Hello,World\\" \\r\\n  (catch Exception e (.message e)))" "(try\\r\\n  (throw (RuntimeException. \\"It's broke\!\\"))\\r\\n  (catch Exception e (.getMessage e)))" ";\u629B\u51FA\u4E00\u4E2A\u643A\u5E26\u4E86\u6D88\u606F\u201CIt's broke\!\u201D\u7684RuntimeException\u3002\u5728catch\u5206\u652F\u4E2D\uFF0C\u6211\u4EEC\\r\\n;\u6355\u83B7\u5230\u4E86\u5F02\u5E38\u5E76\u4ECE\u4E2D\u63D0\u53D6\u4E86\u6D88\u606F\uFF0C\u800C\u8BE5\u6D88\u606F\u4FBF\u6210\u4E3A\u4E86catch\u5206\u652F\u7684\u503C\uFF0C\u56E0\u6B64\u4ED6\u4E5F\u6210\u4E3A\u4E86\u6574\u4E2Atry\u8868\u8FBE\u5F0F\u7684\u8FD4\u56DE\u503C\\r\\n(try\\r\\n  (throw (RuntimeException. \\"It's broke\!\\"))\\r\\n  (catch Exception e (.getMessage e)))" "(ns mbfpp.oo.tinyweb.example\\r\\n  (\:use [mbfpp.oo.tinyweb.core])\\r\\n  (\:require [clojure.string \:as str]))\\r\\n\\r\\n(def request {\:path \\"/greeting\\"\\r\\n              \:body \\"Mike,Joe,John,Steve\\"})\\r\\n\\r\\n;\u63A7\u5236\u5668\u7684\u4EE3\u7801\\r\\n(defn make-greeting[name]\\r\\n  (let [greetings [\\"Hello\\" \\"Greetings\\" \\"Salutations\\" \\"Hola\\"]\\r\\n        greeting-count (count greetings)]\\r\\n    (str (greetings (rand-int greeting-count)) \\",\\" name)))\\r\\n\\r\\n(defn handle-greeting [http-request]\\r\\n  {\:greetings (map make-greeting (str/split (\:body http-request) \#\\",\\"))})\\r\\n\\r\\n;\u8FD0\u884C\u6D4B\u8BD5\u8BF7\u6C42\uFF0C\u5E76\u8FD4\u56DE\u5408\u9002\u7684\u6A21\u578Bmap\\r\\n(handle-greeting request)\\r\\n\\r\\n;\u8BE5\u4EE3\u7801\u5C06\u6A21\u578B\u6E32\u67D3\u5230HTML\uFF0C\u4ED6\u4E5F\u662F\u4E00\u4E2A\u51FD\u6570\uFF0C\u4EE5\u5408\u9002\u7684\u6A21\u578Bmap\u4F5C\u4E3A\u5165\u53C2\uFF0C\u5E76\u8FD4\u56DE\u4E00\u4E2A\u5B57\u7B26\u4E32\\r\\n(defn render-greeting [greeting]\\r\\n  (str \\"<h2>\\" greeting \\"</h2>\\"))\\r\\n\\r\\n(defn greeting-view [model]\\r\\n  (let [rendered-greetings (str/join \\\\newline (map render-greeting (\:greetings model)) )]\\r\\n    (str \\"<h1>Friendly Greetings</h1>\\" rendered-greetings )))\\r\\n\\r\\n(greeting-view (handle-greeting request))" "(ns mbfpp.oo.tinyweb.example\\r\\n  (\:use [mbfpp.oo.tinyweb.core])\\r\\n  (\:require [clojure.string \:as str]))\\r\\n\\r\\n(def request {\:path \\"/greeting\\"\\r\\n              \:body \\"Mike,Joe,John,Steve\\"})\\r\\n\\r\\n;\u63A7\u5236\u5668\u7684\u4EE3\u7801\\r\\n(defn make-greeting[name]\\r\\n  (let [greetings [\\"Hello\\" \\"Greetings\\" \\"Salutations\\" \\"Hola\\"]\\r\\n        greeting-count (count greetings)]\\r\\n    (str (greetings (rand-int greeting-count)) \\",\\" name)))\\r\\n\\r\\n(defn handle-greeting [http-request]\\r\\n  {\:greetings (map make-greeting (str/split (\:body http-request) \#\\",\\"))})\\r\\n\\r\\n;\u8FD0\u884C\u6D4B\u8BD5\u8BF7\u6C42\uFF0C\u5E76\u8FD4\u56DE\u5408\u9002\u7684\u6A21\u578Bmap\\r\\n(handle-greeting request)\\r\\n\\r\\n;\u8BE5\u4EE3\u7801\u5C06\u6A21\u578B\u6E32\u67D3\u5230HTML\uFF0C\u4ED6\u4E5F\u662F\u4E00\u4E2A\u51FD\u6570\uFF0C\u4EE5\u5408\u9002\u7684\u6A21\u578Bmap\u4F5C\u4E3A\u5165\u53C2\uFF0C\u5E76\u8FD4\u56DE\u4E00\u4E2A\u5B57\u7B26\u4E32\\r\\n(defn render-greeting [greeting]\\r\\n  (str \\"<h2>\\" greeting \\"</h2>\\"))\\r\\n\\r\\n(defn greeting-view [model]\\r\\n  (let [rendered-greetings (str/join \\" \\" (map render-greeting (\:greetings model)) )]\\r\\n    (str \\"<h1>Friendly Greetings</h1>\\" rendered-greetings )))\\r\\n\\r\\n(greeting-view (handle-greeting request))" "(ns mbfpp.oo.tinyweb.example\\r\\n  (\:use [mbfpp.oo.tinyweb.core])\\r\\n  (\:require [clojure.string \:as str]))\\r\\n\\r\\n(def request {\:path \\"/greeting\\"\\r\\n              \:body \\"Mike,Joe,John,Steve\\"})\\r\\n\\r\\n;\u63A7\u5236\u5668\u7684\u4EE3\u7801\\r\\n(defn make-greeting[name]\\r\\n  (let [greetings [\\"Hello\\" \\"Greetings\\" \\"Salutations\\" \\"Hola\\"]\\r\\n        greeting-count (count greetings)]\\r\\n    (str (greetings (rand-int greeting-count)) \\",\\" name)))\\r\\n\\r\\n(defn handle-greeting [http-request]\\r\\n  {\:greetings (map make-greeting (str/split (\:body http-request) \#\\",\\"))})\\r\\n\\r\\n;\u8FD0\u884C\u6D4B\u8BD5\u8BF7\u6C42\uFF0C\u5E76\u8FD4\u56DE\u5408\u9002\u7684\u6A21\u578Bmap\\r\\n(handle-greeting request)\\r\\n\\r\\n;\u8BE5\u4EE3\u7801\u5C06\u6A21\u578B\u6E32\u67D3\u5230HTML\uFF0C\u4ED6\u4E5F\u662F\u4E00\u4E2A\u51FD\u6570\uFF0C\u4EE5\u5408\u9002\u7684\u6A21\u578Bmap\u4F5C\u4E3A\u5165\u53C2\uFF0C\u5E76\u8FD4\u56DE\u4E00\u4E2A\u5B57\u7B26\u4E32\\r\\n(defn render-greeting [greeting]\\r\\n  (str \\"<h2>\\" greeting \\"</h2>\\"))\\r\\n\\r\\n(defn greeting-view [model]\\r\\n  (let [rendered-greetings (str/join \\\\newline (map render-greeting (\:greetings model)) )]\\r\\n    (str \\"<h1>Friendly Greetings</h1>\\" rendered-greetings )))\\r\\n\\r\\n(greeting-view (handle-greeting request))" ";\u8BE5\u4EE3\u7801\u5C06\u6A21\u578B\u6E32\u67D3\u5230HTML\uFF0C\u4ED6\u4E5F\u662F\u4E00\u4E2A\u51FD\u6570\uFF0C\u4EE5\u5408\u9002\u7684\u6A21\u578Bmap\u4F5C\u4E3A\u5165\u53C2\uFF0C\u5E76\u8FD4\u56DE\u4E00\u4E2A\u5B57\u7B26\u4E32\\r\\n(defn render-greeting [greeting]\\r\\n  (str \\"<h2>\\" greeting \\"</h2>\\"))\\r\\n\\r\\n;\\\\newline\u4F7F\u7528\u6362\u884C\u7B26\u8FDE\u63A5\\r\\n(defn greeting-view [model]\\r\\n  (let [rendered-greetings (str/join \\\\newline (map render-greeting (\:greetings model)) )]\\r\\n    (str \\"<h1>Friendly Greetings</h1>\\" rendered-greetings )))\\r\\n\\r\\n(greeting-view (handle-greeting request))" "(defn hello [name]\\n  (println \\"Hello,\\" name))" "(hello \\"World\\")" "(tinyweb-instance request)" "(ns mbfpp.oo.tinyweb.example\\r\\n  (\:use [mbfpp.oo.tinyweb.core])\\r\\n  (\:require [clojure.string \:as str]))\\r\\n\\r\\n(def request {\:path \\"/greeting\\"\\r\\n              \:body \\"Mike,Joe,John,Steve\\"})\\r\\n\\r\\n;\u63A7\u5236\u5668\u7684\u4EE3\u7801\\r\\n(defn make-greeting[name]\\r\\n  (let [greetings [\\"Hello\\" \\"Greetings\\" \\"Salutations\\" \\"Hola\\"]\\r\\n        greeting-count (count greetings)]\\r\\n    (str (greetings (rand-int greeting-count)) \\",\\" name)))\\r\\n\\r\\n(defn handle-greeting [http-request]\\r\\n  {\:greetings (map make-greeting (str/split (\:body http-request) \#\\",\\"))})\\r\\n\\r\\n;\u8FD0\u884C\u6D4B\u8BD5\u8BF7\u6C42\uFF0C\u5E76\u8FD4\u56DE\u5408\u9002\u7684\u6A21\u578Bmap\\r\\n(handle-greeting request)\\r\\n\\r\\n;\u8BE5\u4EE3\u7801\u5C06\u6A21\u578B\u6E32\u67D3\u5230HTML\uFF0C\u4ED6\u4E5F\u662F\u4E00\u4E2A\u51FD\u6570\uFF0C\u4EE5\u5408\u9002\u7684\u6A21\u578Bmap\u4F5C\u4E3A\u5165\u53C2\uFF0C\u5E76\u8FD4\u56DE\u4E00\u4E2A\u5B57\u7B26\u4E32\\r\\n(defn render-greeting [greeting]\\r\\n  (str \\"<h2>\\" greeting \\"</h2>\\"))\\r\\n\\r\\n;\\\\newline\u4F7F\u7528\u6362\u884C\u7B26\u8FDE\u63A5\\r\\n(defn greeting-view [model]\\r\\n  (let [rendered-greetings (str/join \\\\newline (map render-greeting (\:greetings model)) )]\\r\\n    (str \\"<h1>Friendly Greetings</h1>\\" rendered-greetings )))\\r\\n\\r\\n(greeting-view (handle-greeting request))\\r\\n\\r\\n;\u8FD9\u662F\u4E00\u4E2A\u7528\u4E8E\u5728\u8BF7\u6C42\u8FD4\u56DE\u524D\u8BB0\u5F55\u5176\u8BBF\u95EE\u8DEF\u5F84\u7684\u7B80\u5355\u51FD\u6570\\r\\n(defn logging-filter [http-request]\\r\\n  (println (str \\"In logging Filter -request for path\: \\" \\r\\n                (\:path http-request))) http-request)\\r\\n\\r\\n(def request-handlers\\r\\n  {\\"/greeting\\" {\:controller handle-greeting\\r\\n                \:view greeting-view}})\\r\\n\\r\\n(def filters [logging-filter])\\r\\n\\r\\n(def tinyweb-instance (tinyweb request-handlers filters))\\r\\n\\r\\n\\r\\n(tinyweb-instance request)"]
eclipse.preferences.version=1
