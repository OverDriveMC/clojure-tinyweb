cmdhistory=["{\:name \\"Mike\\" \:sex \:male}" "(def test-map {\:name \\"Mike\\"})" "(test-map \:name)" "(test-map \:orange)" "(test-map \:\\"name\\")" "(def test-map {\:name \\"Mike\\"})" "(\:name test-map)" "(\:orange test-map)" "(Integer/parseInt \\"42\\")" ".. \\"Mike\\" toUpperCase (substring 0 1)" "(.. \\"mike\\" toUpperCase (substring 0 1))" "(def test-http-request {\:body \\"Mike\\" \:path \\"/say-hello\\" \:headers{}})" "(test-controller test-http-request)" "(defn test-controller [http-request]\\r\\n  {\:name (http-request \:body)})" " (def test-http-request {\:body \\"Mike\\" \:path \\"/say-hello\\" \:headers{}})" "(test-controller test-http-request)" ";\u91C7\u7528<h1>\u6807\u8BB0\u6765\u5BF9\u540D\u5B57\u4FE1\u606F\u8FDB\u884C\u4E86\u5305\u88C5\\r\\n(defn test-view [model]\\r\\n  (str \\"<h1>Hello, \\" (model \:name) \\"</h1>\\"))\\r\\n;\u6D4B\u8BD5\u6A21\u578B\\r\\n(def test-model {\:name \\"Mike\\"})\\r\\n(test-view test-model)" "(ns mbfpp.oo.tinyweb.core\\r\\n   (\:require [clojure.string \:as str])\\r\\n   (\:import (com.mblinn.oo.tinyweb RenderingException ControllerException)))\\r\\n\\r\\n(defn- render [view model]\\r\\n  try(\\r\\n     (view model)\\r\\n     (catch Exception e (throw (RenderingException. e )))))\\r\\n\\r\\n(defn test-controller [http-request]\\r\\n  {\:name (http-request \:body)})\\r\\n\\r\\n(defn test-view [model]\\r\\n  (str \\"<h1>Hello,\\" (model \:name) \\"</h1>\\")\\r\\n  )\\r\\n\\r\\n(def test-request-handler {\:controller test-controller\\r\\n                           \:view test-view})\\r\\n\\r\\n(def test-http-request {\:body \\"Mike\\" \\r\\n                        \:path \\"/say-hello\\"\\r\\n                        \:headers{}})" "(defn- execute-request[http-request handler]\\r\\n  (let [controller (handler \: controller)  \\r\\n        view (handler \:view)]\\r\\n    (try\\r\\n      {\:status-code 200\\r\\n       \:body \\r\\n       (render\\r\\n         view\\r\\n         (controller http-request))}\\r\\n      (catch ControllerException e {\:status-code (.getStatusCode e) \:body \\"\\"})\\r\\n      (catch RenderingException e {\:status-code 500\\r\\n                                   \:body \\"Exception while rendering\\"})\\r\\n      (catch Exception e (.printStackTrace e){\:status-code 500 \:body \\"\\"}))))" "(defproject clojure-tinyweb \\"0.0.1-SNAPSHOT\\"\\r\\n  \:java-source-paths [\\"src/java\\" \\"test/java\\"])" "(defproject my-project \\"0.0.1-SNAPSHOT\\"\\r\\n  [...]\\r\\n  \:java-source-paths [\\"src/java\\" \\"test/java\\"])" "(defproject clojure-tinyweb \\"0.0.1-SNAPSHOT\\"\\r\\n  [...]\\r\\n  \:java-source [\\"src/java\\" \\"test/java\\"])" "(ns mbfpp.oo.tinyweb.core\\r\\n   (\:require [clojure.string \:as str])\\r\\n   (\:import (com.mblinn.oo.tinyweb RenderingException ControllerException)))" "(defn- render [view model]\\r\\n  try(\\r\\n     (view model)\\r\\n     (catch Exception e (throw (RenderingException. e )))))\\r\\n\\r\\n(defn test-controller [http-request]\\r\\n  {\:name (http-request \:body)})\\r\\n\\r\\n(defn test-view [model]\\r\\n  (str \\"<h1>Hello,\\" (model \:name) \\"</h1>\\")\\r\\n  )\\r\\n\\r\\n(def test-request-handler {\:controller test-controller\\r\\n                           \:view test-view})\\r\\n\\r\\n(def test-http-request {\:body \\"Mike\\" \\r\\n                        \:path \\"/say-hello\\"\\r\\n                        \:headers{}})\\r\\n\\r\\n(defn- execute-request[http-request handler]\\r\\n  (let [controller (handler \: controller)  \\r\\n        view (handler \:view)]\\r\\n    (try\\r\\n      {\:status-code 200\\r\\n       \:body \\r\\n       (render\\r\\n         view\\r\\n         (controller http-request))}\\r\\n      (catch ControllerException e {\:status-code (.getStatusCode e) \:body \\"\\"})\\r\\n      (catch RenderingException e {\:status-code 500\\r\\n                                   \:body \\"Exception while rendering\\"})\\r\\n      (catch Exception e (.printStackTrace e){\:status-code 500 \:body \\"\\"}))))\\r\\n\\r\\n(execute-request test-http-request test-request-handler)" "(count [1 2 3 4])" "lein run -m com.mblinn.oo.tinyweb.RenderingException" "(ns mbfpp.oo.tinyweb.core\\r\\n   (\:require [clojure.string \:as str])\\r\\n   (\:import (com.mblinn.oo.tinyweb RenderingException ControllerException)))\\r\\n\\r\\n(defn- render [view model]\\r\\n  (try\\r\\n     (view model)\\r\\n     (catch Exception e (throw (RenderingException. e )))))\\r\\n\\r\\n(defn test-controller [http-request]\\r\\n  {\:name (http-request \:body)})\\r\\n\\r\\n(defn test-view [model]\\r\\n  (str \\"<h1>Hello,\\" (model \:name) \\"</h1>\\")\\r\\n  )\\r\\n\\r\\n(def test-request-handler {\:controller test-controller\\r\\n                           \:view test-view})\\r\\n\\r\\n(def test-http-request {\:body \\"Mike\\" \\r\\n                        \:path \\"/say-hello\\"\\r\\n                        \:headers{}})\\r\\n\\r\\n(defn- execute-request[http-request handler]\\r\\n  (let [controller (handler \:controller)  \\r\\n        view (handler \:view)]\\r\\n    (try\\r\\n      {\:status-code 200\\r\\n       \:body \\r\\n       (render\\r\\n         view\\r\\n         (controller http-request))}\\r\\n      (catch ControllerException e {\:status-code (.getStatusCode e) \:body \\"\\"})\\r\\n      (catch RenderingException e {\:status-code 500\\r\\n                                   \:body \\"Exception while rendering\\"})\\r\\n      (catch Exception e (.printStackTrace e){\:status-code 500 \:body \\"\\"}))))\\r\\n\\r\\n(execute-request test-http-request test-request-handler)"]
eclipse.preferences.version=1
